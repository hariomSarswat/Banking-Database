create table branch  
( branch_name	varchar(30),  
  branch_city	varchar(30), 
  assets	integer,  
  primary key (branch_name)  
);

create table account  
( account_number varchar(30),  
  branch_name	varchar(30),  
  balance	integer,  
  primary key (account_number) 
);

create table depositor  
( customer_name	varchar(30),  
  account_number varchar(30),  
  primary key (customer_name, account_number) 
);

create table customer  
( customer_name	varchar(30),  
  customer_street	varchar(30),  
  customer_city	varchar(30),  
  primary key (customer_name)  
);

create table borrower  
( customer_name  varchar(30),  
  loan_number varchar(30),  
  primary key(customer_name, loan_number)  
);

create table loan  
( loan_number varchar(30),  
  branch_name varchar(30),  
  amount integer,  
  primary key(loan_number) 
);

alter table account add foreign key (branch_name) references branch(branch_name);

alter table depositor add foreign key (account_number) references account(account_number);

alter table depositor add  foreign key (customer_name) references customer(customer_name);

alter table borrower add foreign key (customer_name) references customer(customer_name);

alter table borrower add foreign key (loan_number) references loan(loan_number);

alter table loan add foreign key (branch_name) references branch(branch_name);



insert into branch values ('Bikaner' , 'Bikaner' , 1000);

insert into branch values ('Jodhpur' , 'Jodhpur' , 2000);

insert into branch values ('Jaipur' , 'Jaipur' , 3000);

insert into branch values ('Sikar' , 'Sikar' , 4000);



insert into account values ( '11' , 'Sikar' , 100);

insert into account values ( '12' , 'Bikaner' , 200);

insert into account values ( '13' , 'Jodhpur' , 300);

insert into account values ( '14' , 'Jaipur' , 400);

insert into account values ( '15' , 'Jaipur' , 500);

insert into account values ( '16' , 'Bikaner' , 600);

insert into account values ( '17' , 'Bikaner' , 700);

insert into account values ( '18' , 'Sikar' , 800);

insert into account values ( '19' , 'Jodhpur' , 900);



insert into customer values ( 'Hariom' , 'Runiya Bas' , 'Bikaner');

insert into customer values ( 'Lokender' , 'Degana' , 'Jodhpur');

insert into customer values ( 'Kamal' , 'Runiya Bas' , 'Bikaner');

insert into customer values ( 'Ramdayal' , 'Damtiwara' , 'Jodhpur');

insert into customer values ( 'Rahul' , 'Piprali' , 'Sikar');

insert into customer values ( 'Dinesh' , 'Chomu' , 'Jaipur');



insert into depositor values ('Hariom' , '11');

insert into depositor values ('Rahul' , '12');

insert into depositor values ('Lokender' , '13');

insert into depositor values ('Kamal' , '14');

insert into depositor values ('Ramdayal' , '15');

insert into depositor values ('Rahul' , '16');

insert into depositor values ('Dinesh' , '17');

insert into depositor values ('Hariom' , '18');



insert into loan values ( '201' , 'Bikaner' , 1000);

insert into loan values('202' , 'Jodhpur' , 2000);

insert into loan values('203' , 'Bikaner' , 3000);

insert into loan values('204' , 'Jaipur' , 4000);

insert into loan values('205' , 'Sikar' , 5000);

insert into loan values('206' , 'Jodhpur' , 6000);



insert into borrower values ('Hariom' , 201);

insert into borrower values ('Lokender' , 202);

insert into borrower values ('Hariom' , 203);

insert into borrower values ('Kamal' , 204);

insert into borrower values ('Hariom' , 205);

insert into borrower values ('Ramadayal' , 206);



select * from branch;

select * from account;

select * from customer;

select * from depositor;

select * from loan;

select * from borrower;

select * from loan;



select * from loan , borrower where loan.loan_number = borrower.loan_number;

select * from branch;

select * from branch where branch_city = 'rakholi'  and  assets > some(select assets from branch );



1   Find the names of all customers whose street includes the substring “adr”

->  select * from customer where customer_street like '%adr%';

2   List in alphabetic order the names of all customers having a loan in silvassa branch

->  select * from borrower , loan where borrower.loan_number = loan.loan_number and 
    branch_name = 'silvassa' order by customer_name;

3   Find all customers who have a loan, an account, or both
->  select customer_name from depositor  
    union 
    select customer_name from borrower;

4   Find all customers who have both a loan and an account
->  select customer_name from depositor 
    intersect 
    select customer_name from borrower;

5   Find all customers who have an account but no loan.
->  select customer_name from depositor 
    minus 
    select customer_name from borrower;

6   Find the average account balance at the silvassa branch.
->  select avg(balance) from account where branch_name = 'silvassa';

7   Find the number of tuples in the customer relation
->  select count(*) from account;

8   Find the number of depositors in the bank  
->  select count(distinct customer_name) from depositor;

9   Find the number of depositors for each branch
->  select branch_name , count(distinct customer_name) from depositor , account 
    where depositor.account_number = account.account_number group by branch_name ;

10  Find the names of all branches where the average account balance is more than Rs 200
->  select branch_name , avg(balance) from account group by branch_name having avg(balance) > 200;

11  Find all customers who have a loan at the bank but do not have an account at the bank
->  select distinct customer_name from depositor where customer_name not In 
    (select customer_name from borrower);

12  Find all customers who have both an account and a loan at the silvassa branch
->  select distinct customer_name from borrower, loan where borrower.loan_number = loan.loan_number 
    and branch_name = 'silvassa' and customer_name In ( 
    select customer_name from depositor, account  
    where depositor.account_number = account.account_number);

13  Find all branches that have greater assets than some branch located in rakholi.
->  select * from branch where branch_city = 'rakholi' and assets >= all 
    (select assets from branch);

14  Find all customers who have at most one account at the silvassa branch.
->  select customer_name from  
    (select * from account , depositor where account.account_number = depositor.account_number and branch_name = 'silvassa') 
    group by customer_name having count(customer_name) = 1;

15  Find all customers who have at least two accounts at the Perryridge branch
->  select customer_name from 
    (select * from account , depositor where account.account_number = depositor.account_number and branch_name = 'silvassa') 
    group by customer_name having count(customer_name) >1;
